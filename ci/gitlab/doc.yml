variables:
  GIT_SUBMODULE_STRATEGY: recursive

doc:htmlproofer:
  needs: []
  stage: doc
  variables:
    HTMLPROOFER: "true"
  script:
    # Build with htmlproofer link checking enabled
    - uv run --directory docs mkdocs-zhinst build --strict
  allow_failure: true
  rules:
    - !reference [.non_triggered]

doc:build:
  needs: []
  stage: doc
  script:
    # NOTE: The 'handlers: python: paths: ...' configuration for mkdocstring
    # ensures `laboneq-applications` is found for api documentation.
    # If you want to use introspection (i.e. have laboneq-applications
    # installed as package), explicitly create and activate venv. Doing `uv run
    # --with ..` kind of stuff didn't make mkdocs happy.
    - uv run --directory docs mkdocs-zhinst build --strict
    - find site -name "*.md" -type f -delete
  artifacts:
    paths:
      - site
    expire_in: 1 day
  rules:
    - !reference [.non_triggered]

pages:
  stage: doc
  needs:
    - job: doc:build
    - job: test:coverage
  script:
    - mkdir -p public/manual
    - mv site/* public/manual
    - mkdir -p public/coverage
    - mv coverage_html/* public/coverage
  artifacts:
    paths:
      - public
    expire_in: 30 days
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"

doc:trigger_hub_internal:
  stage: doc
  needs:
    job: doc:build
  trigger:
    project: qccs/qt-documentation-hub
    branch: main
  variables:
    PROJECT_PIPELINE: "qccs/laboneq-applications:${CI_PIPELINE_ID}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
    - !reference [.non_triggered]

